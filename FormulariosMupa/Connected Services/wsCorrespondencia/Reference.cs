//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FormulariosMupa.wsCorrespondencia {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="wsCorrespondencia.wsCorrespondenciaSoap")]
    public interface wsCorrespondenciaSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DescifrarCodigoRegistro", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DescifrarCodigoRegistro(string Codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DescifrarCodigoRegistro", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DescifrarCodigoRegistroAsync(string Codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerificarCodigoDocumento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool VerificarCodigoDocumento(string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerificarCodigoDocumento", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> VerificarCodigoDocumentoAsync(string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDatosCorrespondenciaExterna", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerDatosCorrespondenciaExterna(string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDatosCorrespondenciaExterna", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerDatosCorrespondenciaExternaAsync(string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerEmisoresCorrespondenciaExterna", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerEmisoresCorrespondenciaExterna(string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerEmisoresCorrespondenciaExterna", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerEmisoresCorrespondenciaExternaAsync(string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDigitalizadosCorrespondenciaExterna", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerDigitalizadosCorrespondenciaExterna(string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDigitalizadosCorrespondenciaExterna", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerDigitalizadosCorrespondenciaExternaAsync(string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerCopiasCorrespondenciaExterna", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerCopiasCorrespondenciaExterna(string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerCopiasCorrespondenciaExterna", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerCopiasCorrespondenciaExternaAsync(string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerRecorridoCopiaCorrespondencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerRecorridoCopiaCorrespondencia(int Copia, string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerRecorridoCopiaCorrespondencia", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerRecorridoCopiaCorrespondenciaAsync(int Copia, string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDerivadasDeCorrespondencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerDerivadasDeCorrespondencia(string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDerivadasDeCorrespondencia", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerDerivadasDeCorrespondenciaAsync(string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDerivadasInternasDeCorrespondencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerDerivadasInternasDeCorrespondencia(string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDerivadasInternasDeCorrespondencia", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerDerivadasInternasDeCorrespondenciaAsync(string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerRespuestasDeCorrespondencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerRespuestasDeCorrespondencia(string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerRespuestasDeCorrespondencia", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerRespuestasDeCorrespondenciaAsync(string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerPrecedentesDeCorrespondencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerPrecedentesDeCorrespondencia(string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerPrecedentesDeCorrespondencia", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerPrecedentesDeCorrespondenciaAsync(string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerListaDocumentosCorrespondencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerListaDocumentosCorrespondencia(string CodigoRegistro, string Password, int CodigoInterna);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerListaDocumentosCorrespondencia", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerListaDocumentosCorrespondenciaAsync(string CodigoRegistro, string Password, int CodigoInterna);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDocumentoAdjuntoCorrespondencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ObtenerDocumentoAdjuntoCorrespondencia(int CodigoDocumento, string CodigoRegistro, string Password, bool ConsultaPublica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDocumentoAdjuntoCorrespondencia", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ObtenerDocumentoAdjuntoCorrespondenciaAsync(int CodigoDocumento, string CodigoRegistro, string Password, bool ConsultaPublica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerArchivoDigitalizadoCorrespondencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ObtenerArchivoDigitalizadoCorrespondencia(int CodigoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerArchivoDigitalizadoCorrespondencia", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ObtenerArchivoDigitalizadoCorrespondenciaAsync(int CodigoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDocumentoCorrespondencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ObtenerDocumentoCorrespondencia(int CodigoInterna, string CodigoRegistro, string Password, bool ConvertirAPDF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDocumentoCorrespondencia", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ObtenerDocumentoCorrespondenciaAsync(int CodigoInterna, string CodigoRegistro, string Password, bool ConvertirAPDF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDocumentoCorrespondenciaInterna", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ObtenerDocumentoCorrespondenciaInterna(string Codigo, bool ConvertirAPDF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDocumentoCorrespondenciaInterna", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ObtenerDocumentoCorrespondenciaInternaAsync(string Codigo, bool ConvertirAPDF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDocumentosDigitalizadosCorrespondencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ObtenerDocumentosDigitalizadosCorrespondencia(long CodigoCorrespondencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDocumentosDigitalizadosCorrespondencia", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ObtenerDocumentosDigitalizadosCorrespondenciaAsync(long CodigoCorrespondencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDocumentoDigitalizadoCorrespondencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ObtenerDocumentoDigitalizadoCorrespondencia(int CodigoDocumento, bool escaneado, string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDocumentoDigitalizadoCorrespondencia", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ObtenerDocumentoDigitalizadoCorrespondenciaAsync(int CodigoDocumento, bool escaneado, string CodigoRegistro, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnviarEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool EnviarEmail(int Codigo, string Destinos, bool Adjuntos, bool AnexarDigitalizadosPrecedente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnviarEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> EnviarEmailAsync(int Codigo, string Destinos, bool Adjuntos, bool AnexarDigitalizadosPrecedente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FirmarCorrespondenciaEditorOrigen", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int FirmarCorrespondenciaEditorOrigen(string Codigo, string Despacho, bool FirmaPermanente, string PasswordFirma);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FirmarCorrespondenciaEditorOrigen", ReplyAction="*")]
        System.Threading.Tasks.Task<int> FirmarCorrespondenciaEditorOrigenAsync(string Codigo, string Despacho, bool FirmaPermanente, string PasswordFirma);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConvertirTramitadaAPDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ConvertirTramitadaAPDF(string Codigo, string Despacho, int Momento, int FirmaDigital, string PasswordFirma);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConvertirTramitadaAPDF", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ConvertirTramitadaAPDFAsync(string Codigo, string Despacho, int Momento, int FirmaDigital, string PasswordFirma);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnviarEmailExterna", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool EnviarEmailExterna(int Codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnviarEmailExterna", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> EnviarEmailExternaAsync(int Codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearPresentacionWeb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CrearPresentacionWeb(
                    string Asunto, 
                    string Numero_Origen, 
                    string Resumen, 
                    string Nombres, 
                    string Apellidos, 
                    string Pais, 
                    string Provincia, 
                    string Ciudad, 
                    string Calle, 
                    short Sexo, 
                    string Nro_Documento, 
                    string Fecha_Nacimiento, 
                    string Email, 
                    string Codigo_Postal, 
                    string Fax, 
                    short Tipo_Direccion, 
                    string Telefono, 
                    string Tipo_Presentacion, 
                    string Medio_Respuesta, 
                    string Clasificadores, 
                    int Medio_Envio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearPresentacionWeb", ReplyAction="*")]
        System.Threading.Tasks.Task<int> CrearPresentacionWebAsync(
                    string Asunto, 
                    string Numero_Origen, 
                    string Resumen, 
                    string Nombres, 
                    string Apellidos, 
                    string Pais, 
                    string Provincia, 
                    string Ciudad, 
                    string Calle, 
                    short Sexo, 
                    string Nro_Documento, 
                    string Fecha_Nacimiento, 
                    string Email, 
                    string Codigo_Postal, 
                    string Fax, 
                    short Tipo_Direccion, 
                    string Telefono, 
                    string Tipo_Presentacion, 
                    string Medio_Respuesta, 
                    string Clasificadores, 
                    int Medio_Envio);
        
        // CODEGEN: Se está generando un contrato de mensaje, ya que el nombre de contenedor (CrearPresentacionWebAnterior) del mensaje CrearPresentacionWebAnterior no coincide con el valor predeterminado (CrearPresentacionWeb1)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearPresentacionWebAnterior", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        FormulariosMupa.wsCorrespondencia.CrearPresentacionWebAnterior1 CrearPresentacionWeb1(FormulariosMupa.wsCorrespondencia.CrearPresentacionWebAnterior request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearPresentacionWebAnterior", ReplyAction="*")]
        System.Threading.Tasks.Task<FormulariosMupa.wsCorrespondencia.CrearPresentacionWebAnterior1> CrearPresentacionWeb1Async(FormulariosMupa.wsCorrespondencia.CrearPresentacionWebAnterior request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearPresentacionWebDespacho", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CrearPresentacionWebDespacho(string Despacho, string Asunto, string Numero_Origen, string Resumen, int Tipo_Presentacion, string Medio_Respuesta, int Medio_Envio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearPresentacionWebDespacho", ReplyAction="*")]
        System.Threading.Tasks.Task<int> CrearPresentacionWebDespachoAsync(string Despacho, string Asunto, string Numero_Origen, string Resumen, int Tipo_Presentacion, string Medio_Respuesta, int Medio_Envio);
        
        // CODEGEN: El parámetro 'Archivo' requiere información adicional de esquema que no se puede capturar con el modo de parámetros. El atributo específico es 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SubirDocumentoPresentacionWeb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        FormulariosMupa.wsCorrespondencia.SubirDocumentoPresentacionWebResponse SubirDocumentoPresentacionWeb(FormulariosMupa.wsCorrespondencia.SubirDocumentoPresentacionWebRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SubirDocumentoPresentacionWeb", ReplyAction="*")]
        System.Threading.Tasks.Task<FormulariosMupa.wsCorrespondencia.SubirDocumentoPresentacionWebResponse> SubirDocumentoPresentacionWebAsync(FormulariosMupa.wsCorrespondencia.SubirDocumentoPresentacionWebRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerArbolDeClasificadores", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerArbolDeClasificadores(string Clave, int Nivel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerArbolDeClasificadores", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerArbolDeClasificadoresAsync(string Clave, int Nivel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerTipoCorrespondencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerTipoCorrespondencia();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerTipoCorrespondencia", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerTipoCorrespondenciaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnviarEmailTransferencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool EnviarEmailTransferencia(string Codigos, int NuevasCopia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnviarEmailTransferencia", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> EnviarEmailTransferenciaAsync(string Codigos, int NuevasCopia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnviaCorrespondenciaAInstitucionesVinculadas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool EnviaCorrespondenciaAInstitucionesVinculadas(int codigoCorrespondencia, string codigosDestinos, bool AnexarDigitalizadosPrecedente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnviaCorrespondenciaAInstitucionesVinculadas", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> EnviaCorrespondenciaAInstitucionesVinculadasAsync(int codigoCorrespondencia, string codigosDestinos, bool AnexarDigitalizadosPrecedente);
        
        // CODEGEN: El parámetro 'Archivo' requiere información adicional de esquema que no se puede capturar con el modo de parámetros. El atributo específico es 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearPreCorrespondenciaDesdeArchivo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        FormulariosMupa.wsCorrespondencia.CrearPreCorrespondenciaDesdeArchivoResponse CrearPreCorrespondenciaDesdeArchivo(FormulariosMupa.wsCorrespondencia.CrearPreCorrespondenciaDesdeArchivoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearPreCorrespondenciaDesdeArchivo", ReplyAction="*")]
        System.Threading.Tasks.Task<FormulariosMupa.wsCorrespondencia.CrearPreCorrespondenciaDesdeArchivoResponse> CrearPreCorrespondenciaDesdeArchivoAsync(FormulariosMupa.wsCorrespondencia.CrearPreCorrespondenciaDesdeArchivoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificarRegistroCorrespondenciaVinculada", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool NotificarRegistroCorrespondenciaVinculada(int codigoCorrespondencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificarRegistroCorrespondenciaVinculada", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> NotificarRegistroCorrespondenciaVinculadaAsync(int codigoCorrespondencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RecibeNotificacionRegistroCorrespondenciaVinculada", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool RecibeNotificacionRegistroCorrespondenciaVinculada(string codigoRegistroOrigen, string codigoRegistroRespuesta, string passwordRegistroRespuesta, string institucion, System.DateTime fechaRegistro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RecibeNotificacionRegistroCorrespondenciaVinculada", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> RecibeNotificacionRegistroCorrespondenciaVinculadaAsync(string codigoRegistroOrigen, string codigoRegistroRespuesta, string passwordRegistroRespuesta, string institucion, System.DateTime fechaRegistro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDatosRegistroCorrespondenciaVinculada", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerDatosRegistroCorrespondenciaVinculada(string codigoRegistroOrigen, string institucion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDatosRegistroCorrespondenciaVinculada", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerDatosRegistroCorrespondenciaVinculadaAsync(string codigoRegistroOrigen, string institucion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizaDatosRegistroCorrespondenciaVinculada", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ActualizaDatosRegistroCorrespondenciaVinculada(string codigoRegistro, string institucion, string urlWebService);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizaDatosRegistroCorrespondenciaVinculada", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ActualizaDatosRegistroCorrespondenciaVinculadaAsync(string codigoRegistro, string institucion, string urlWebService);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ParametrosQRInterna", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ParametrosQRInterna();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ParametrosQRInterna", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ParametrosQRInternaAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CrearPresentacionWebAnterior", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CrearPresentacionWebAnterior {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Asunto;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Numero_Origen;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Resumen;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string Nombres;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string Apellidos;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string Pais;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string Provincia;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string Ciudad;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string Calle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public short Sexo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string Nro_Documento;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public string Email;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        public string Codigo_Postal;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        public string Fax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=14)]
        public short Tipo_Direccion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=15)]
        public string Telefono;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=16)]
        public string Tipo_Presentacion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=17)]
        public string Medio_Respuesta;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=18)]
        public string Clasificadores;
        
        public CrearPresentacionWebAnterior() {
        }
        
        public CrearPresentacionWebAnterior(
                    string Asunto, 
                    string Numero_Origen, 
                    string Resumen, 
                    string Nombres, 
                    string Apellidos, 
                    string Pais, 
                    string Provincia, 
                    string Ciudad, 
                    string Calle, 
                    short Sexo, 
                    string Nro_Documento, 
                    string Email, 
                    string Codigo_Postal, 
                    string Fax, 
                    short Tipo_Direccion, 
                    string Telefono, 
                    string Tipo_Presentacion, 
                    string Medio_Respuesta, 
                    string Clasificadores) {
            this.Asunto = Asunto;
            this.Numero_Origen = Numero_Origen;
            this.Resumen = Resumen;
            this.Nombres = Nombres;
            this.Apellidos = Apellidos;
            this.Pais = Pais;
            this.Provincia = Provincia;
            this.Ciudad = Ciudad;
            this.Calle = Calle;
            this.Sexo = Sexo;
            this.Nro_Documento = Nro_Documento;
            this.Email = Email;
            this.Codigo_Postal = Codigo_Postal;
            this.Fax = Fax;
            this.Tipo_Direccion = Tipo_Direccion;
            this.Telefono = Telefono;
            this.Tipo_Presentacion = Tipo_Presentacion;
            this.Medio_Respuesta = Medio_Respuesta;
            this.Clasificadores = Clasificadores;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CrearPresentacionWebAnteriorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CrearPresentacionWebAnterior1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int CrearPresentacionWebAnteriorResult;
        
        public CrearPresentacionWebAnterior1() {
        }
        
        public CrearPresentacionWebAnterior1(int CrearPresentacionWebAnteriorResult) {
            this.CrearPresentacionWebAnteriorResult = CrearPresentacionWebAnteriorResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubirDocumentoPresentacionWeb", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SubirDocumentoPresentacionWebRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int Codigo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string NombreDocumento;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Archivo;
        
        public SubirDocumentoPresentacionWebRequest() {
        }
        
        public SubirDocumentoPresentacionWebRequest(int Codigo, string NombreDocumento, byte[] Archivo) {
            this.Codigo = Codigo;
            this.NombreDocumento = NombreDocumento;
            this.Archivo = Archivo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubirDocumentoPresentacionWebResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SubirDocumentoPresentacionWebResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool SubirDocumentoPresentacionWebResult;
        
        public SubirDocumentoPresentacionWebResponse() {
        }
        
        public SubirDocumentoPresentacionWebResponse(bool SubirDocumentoPresentacionWebResult) {
            this.SubirDocumentoPresentacionWebResult = SubirDocumentoPresentacionWebResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CrearPreCorrespondenciaDesdeArchivo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CrearPreCorrespondenciaDesdeArchivoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Archivo;
        
        public CrearPreCorrespondenciaDesdeArchivoRequest() {
        }
        
        public CrearPreCorrespondenciaDesdeArchivoRequest(byte[] Archivo) {
            this.Archivo = Archivo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CrearPreCorrespondenciaDesdeArchivoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CrearPreCorrespondenciaDesdeArchivoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool CrearPreCorrespondenciaDesdeArchivoResult;
        
        public CrearPreCorrespondenciaDesdeArchivoResponse() {
        }
        
        public CrearPreCorrespondenciaDesdeArchivoResponse(bool CrearPreCorrespondenciaDesdeArchivoResult) {
            this.CrearPreCorrespondenciaDesdeArchivoResult = CrearPreCorrespondenciaDesdeArchivoResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface wsCorrespondenciaSoapChannel : FormulariosMupa.wsCorrespondencia.wsCorrespondenciaSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class wsCorrespondenciaSoapClient : System.ServiceModel.ClientBase<FormulariosMupa.wsCorrespondencia.wsCorrespondenciaSoap>, FormulariosMupa.wsCorrespondencia.wsCorrespondenciaSoap {
        
        public wsCorrespondenciaSoapClient() {
        }
        
        public wsCorrespondenciaSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wsCorrespondenciaSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsCorrespondenciaSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsCorrespondenciaSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string DescifrarCodigoRegistro(string Codigo) {
            return base.Channel.DescifrarCodigoRegistro(Codigo);
        }
        
        public System.Threading.Tasks.Task<string> DescifrarCodigoRegistroAsync(string Codigo) {
            return base.Channel.DescifrarCodigoRegistroAsync(Codigo);
        }
        
        public bool VerificarCodigoDocumento(string CodigoRegistro, string Password) {
            return base.Channel.VerificarCodigoDocumento(CodigoRegistro, Password);
        }
        
        public System.Threading.Tasks.Task<bool> VerificarCodigoDocumentoAsync(string CodigoRegistro, string Password) {
            return base.Channel.VerificarCodigoDocumentoAsync(CodigoRegistro, Password);
        }
        
        public System.Data.DataSet ObtenerDatosCorrespondenciaExterna(string CodigoRegistro, string Password) {
            return base.Channel.ObtenerDatosCorrespondenciaExterna(CodigoRegistro, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerDatosCorrespondenciaExternaAsync(string CodigoRegistro, string Password) {
            return base.Channel.ObtenerDatosCorrespondenciaExternaAsync(CodigoRegistro, Password);
        }
        
        public System.Data.DataSet ObtenerEmisoresCorrespondenciaExterna(string CodigoRegistro, string Password) {
            return base.Channel.ObtenerEmisoresCorrespondenciaExterna(CodigoRegistro, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerEmisoresCorrespondenciaExternaAsync(string CodigoRegistro, string Password) {
            return base.Channel.ObtenerEmisoresCorrespondenciaExternaAsync(CodigoRegistro, Password);
        }
        
        public System.Data.DataSet ObtenerDigitalizadosCorrespondenciaExterna(string CodigoRegistro, string Password) {
            return base.Channel.ObtenerDigitalizadosCorrespondenciaExterna(CodigoRegistro, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerDigitalizadosCorrespondenciaExternaAsync(string CodigoRegistro, string Password) {
            return base.Channel.ObtenerDigitalizadosCorrespondenciaExternaAsync(CodigoRegistro, Password);
        }
        
        public System.Data.DataSet ObtenerCopiasCorrespondenciaExterna(string CodigoRegistro, string Password) {
            return base.Channel.ObtenerCopiasCorrespondenciaExterna(CodigoRegistro, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerCopiasCorrespondenciaExternaAsync(string CodigoRegistro, string Password) {
            return base.Channel.ObtenerCopiasCorrespondenciaExternaAsync(CodigoRegistro, Password);
        }
        
        public System.Data.DataSet ObtenerRecorridoCopiaCorrespondencia(int Copia, string CodigoRegistro, string Password) {
            return base.Channel.ObtenerRecorridoCopiaCorrespondencia(Copia, CodigoRegistro, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerRecorridoCopiaCorrespondenciaAsync(int Copia, string CodigoRegistro, string Password) {
            return base.Channel.ObtenerRecorridoCopiaCorrespondenciaAsync(Copia, CodigoRegistro, Password);
        }
        
        public System.Data.DataSet ObtenerDerivadasDeCorrespondencia(string CodigoRegistro, string Password) {
            return base.Channel.ObtenerDerivadasDeCorrespondencia(CodigoRegistro, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerDerivadasDeCorrespondenciaAsync(string CodigoRegistro, string Password) {
            return base.Channel.ObtenerDerivadasDeCorrespondenciaAsync(CodigoRegistro, Password);
        }
        
        public System.Data.DataSet ObtenerDerivadasInternasDeCorrespondencia(string CodigoRegistro, string Password) {
            return base.Channel.ObtenerDerivadasInternasDeCorrespondencia(CodigoRegistro, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerDerivadasInternasDeCorrespondenciaAsync(string CodigoRegistro, string Password) {
            return base.Channel.ObtenerDerivadasInternasDeCorrespondenciaAsync(CodigoRegistro, Password);
        }
        
        public System.Data.DataSet ObtenerRespuestasDeCorrespondencia(string CodigoRegistro, string Password) {
            return base.Channel.ObtenerRespuestasDeCorrespondencia(CodigoRegistro, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerRespuestasDeCorrespondenciaAsync(string CodigoRegistro, string Password) {
            return base.Channel.ObtenerRespuestasDeCorrespondenciaAsync(CodigoRegistro, Password);
        }
        
        public System.Data.DataSet ObtenerPrecedentesDeCorrespondencia(string CodigoRegistro, string Password) {
            return base.Channel.ObtenerPrecedentesDeCorrespondencia(CodigoRegistro, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerPrecedentesDeCorrespondenciaAsync(string CodigoRegistro, string Password) {
            return base.Channel.ObtenerPrecedentesDeCorrespondenciaAsync(CodigoRegistro, Password);
        }
        
        public System.Data.DataSet ObtenerListaDocumentosCorrespondencia(string CodigoRegistro, string Password, int CodigoInterna) {
            return base.Channel.ObtenerListaDocumentosCorrespondencia(CodigoRegistro, Password, CodigoInterna);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerListaDocumentosCorrespondenciaAsync(string CodigoRegistro, string Password, int CodigoInterna) {
            return base.Channel.ObtenerListaDocumentosCorrespondenciaAsync(CodigoRegistro, Password, CodigoInterna);
        }
        
        public string ObtenerDocumentoAdjuntoCorrespondencia(int CodigoDocumento, string CodigoRegistro, string Password, bool ConsultaPublica) {
            return base.Channel.ObtenerDocumentoAdjuntoCorrespondencia(CodigoDocumento, CodigoRegistro, Password, ConsultaPublica);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerDocumentoAdjuntoCorrespondenciaAsync(int CodigoDocumento, string CodigoRegistro, string Password, bool ConsultaPublica) {
            return base.Channel.ObtenerDocumentoAdjuntoCorrespondenciaAsync(CodigoDocumento, CodigoRegistro, Password, ConsultaPublica);
        }
        
        public string ObtenerArchivoDigitalizadoCorrespondencia(int CodigoDocumento) {
            return base.Channel.ObtenerArchivoDigitalizadoCorrespondencia(CodigoDocumento);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerArchivoDigitalizadoCorrespondenciaAsync(int CodigoDocumento) {
            return base.Channel.ObtenerArchivoDigitalizadoCorrespondenciaAsync(CodigoDocumento);
        }
        
        public string ObtenerDocumentoCorrespondencia(int CodigoInterna, string CodigoRegistro, string Password, bool ConvertirAPDF) {
            return base.Channel.ObtenerDocumentoCorrespondencia(CodigoInterna, CodigoRegistro, Password, ConvertirAPDF);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerDocumentoCorrespondenciaAsync(int CodigoInterna, string CodigoRegistro, string Password, bool ConvertirAPDF) {
            return base.Channel.ObtenerDocumentoCorrespondenciaAsync(CodigoInterna, CodigoRegistro, Password, ConvertirAPDF);
        }
        
        public string ObtenerDocumentoCorrespondenciaInterna(string Codigo, bool ConvertirAPDF) {
            return base.Channel.ObtenerDocumentoCorrespondenciaInterna(Codigo, ConvertirAPDF);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerDocumentoCorrespondenciaInternaAsync(string Codigo, bool ConvertirAPDF) {
            return base.Channel.ObtenerDocumentoCorrespondenciaInternaAsync(Codigo, ConvertirAPDF);
        }
        
        public string ObtenerDocumentosDigitalizadosCorrespondencia(long CodigoCorrespondencia) {
            return base.Channel.ObtenerDocumentosDigitalizadosCorrespondencia(CodigoCorrespondencia);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerDocumentosDigitalizadosCorrespondenciaAsync(long CodigoCorrespondencia) {
            return base.Channel.ObtenerDocumentosDigitalizadosCorrespondenciaAsync(CodigoCorrespondencia);
        }
        
        public string[] ObtenerDocumentoDigitalizadoCorrespondencia(int CodigoDocumento, bool escaneado, string CodigoRegistro, string Password) {
            return base.Channel.ObtenerDocumentoDigitalizadoCorrespondencia(CodigoDocumento, escaneado, CodigoRegistro, Password);
        }
        
        public System.Threading.Tasks.Task<string[]> ObtenerDocumentoDigitalizadoCorrespondenciaAsync(int CodigoDocumento, bool escaneado, string CodigoRegistro, string Password) {
            return base.Channel.ObtenerDocumentoDigitalizadoCorrespondenciaAsync(CodigoDocumento, escaneado, CodigoRegistro, Password);
        }
        
        public bool EnviarEmail(int Codigo, string Destinos, bool Adjuntos, bool AnexarDigitalizadosPrecedente) {
            return base.Channel.EnviarEmail(Codigo, Destinos, Adjuntos, AnexarDigitalizadosPrecedente);
        }
        
        public System.Threading.Tasks.Task<bool> EnviarEmailAsync(int Codigo, string Destinos, bool Adjuntos, bool AnexarDigitalizadosPrecedente) {
            return base.Channel.EnviarEmailAsync(Codigo, Destinos, Adjuntos, AnexarDigitalizadosPrecedente);
        }
        
        public int FirmarCorrespondenciaEditorOrigen(string Codigo, string Despacho, bool FirmaPermanente, string PasswordFirma) {
            return base.Channel.FirmarCorrespondenciaEditorOrigen(Codigo, Despacho, FirmaPermanente, PasswordFirma);
        }
        
        public System.Threading.Tasks.Task<int> FirmarCorrespondenciaEditorOrigenAsync(string Codigo, string Despacho, bool FirmaPermanente, string PasswordFirma) {
            return base.Channel.FirmarCorrespondenciaEditorOrigenAsync(Codigo, Despacho, FirmaPermanente, PasswordFirma);
        }
        
        public bool ConvertirTramitadaAPDF(string Codigo, string Despacho, int Momento, int FirmaDigital, string PasswordFirma) {
            return base.Channel.ConvertirTramitadaAPDF(Codigo, Despacho, Momento, FirmaDigital, PasswordFirma);
        }
        
        public System.Threading.Tasks.Task<bool> ConvertirTramitadaAPDFAsync(string Codigo, string Despacho, int Momento, int FirmaDigital, string PasswordFirma) {
            return base.Channel.ConvertirTramitadaAPDFAsync(Codigo, Despacho, Momento, FirmaDigital, PasswordFirma);
        }
        
        public bool EnviarEmailExterna(int Codigo) {
            return base.Channel.EnviarEmailExterna(Codigo);
        }
        
        public System.Threading.Tasks.Task<bool> EnviarEmailExternaAsync(int Codigo) {
            return base.Channel.EnviarEmailExternaAsync(Codigo);
        }
        
        public int CrearPresentacionWeb(
                    string Asunto, 
                    string Numero_Origen, 
                    string Resumen, 
                    string Nombres, 
                    string Apellidos, 
                    string Pais, 
                    string Provincia, 
                    string Ciudad, 
                    string Calle, 
                    short Sexo, 
                    string Nro_Documento, 
                    string Fecha_Nacimiento, 
                    string Email, 
                    string Codigo_Postal, 
                    string Fax, 
                    short Tipo_Direccion, 
                    string Telefono, 
                    string Tipo_Presentacion, 
                    string Medio_Respuesta, 
                    string Clasificadores, 
                    int Medio_Envio) {
            return base.Channel.CrearPresentacionWeb(Asunto, Numero_Origen, Resumen, Nombres, Apellidos, Pais, Provincia, Ciudad, Calle, Sexo, Nro_Documento, Fecha_Nacimiento, Email, Codigo_Postal, Fax, Tipo_Direccion, Telefono, Tipo_Presentacion, Medio_Respuesta, Clasificadores, Medio_Envio);
        }
        
        public System.Threading.Tasks.Task<int> CrearPresentacionWebAsync(
                    string Asunto, 
                    string Numero_Origen, 
                    string Resumen, 
                    string Nombres, 
                    string Apellidos, 
                    string Pais, 
                    string Provincia, 
                    string Ciudad, 
                    string Calle, 
                    short Sexo, 
                    string Nro_Documento, 
                    string Fecha_Nacimiento, 
                    string Email, 
                    string Codigo_Postal, 
                    string Fax, 
                    short Tipo_Direccion, 
                    string Telefono, 
                    string Tipo_Presentacion, 
                    string Medio_Respuesta, 
                    string Clasificadores, 
                    int Medio_Envio) {
            return base.Channel.CrearPresentacionWebAsync(Asunto, Numero_Origen, Resumen, Nombres, Apellidos, Pais, Provincia, Ciudad, Calle, Sexo, Nro_Documento, Fecha_Nacimiento, Email, Codigo_Postal, Fax, Tipo_Direccion, Telefono, Tipo_Presentacion, Medio_Respuesta, Clasificadores, Medio_Envio);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FormulariosMupa.wsCorrespondencia.CrearPresentacionWebAnterior1 FormulariosMupa.wsCorrespondencia.wsCorrespondenciaSoap.CrearPresentacionWeb1(FormulariosMupa.wsCorrespondencia.CrearPresentacionWebAnterior request) {
            return base.Channel.CrearPresentacionWeb1(request);
        }
        
        public int CrearPresentacionWeb1(
                    string Asunto, 
                    string Numero_Origen, 
                    string Resumen, 
                    string Nombres, 
                    string Apellidos, 
                    string Pais, 
                    string Provincia, 
                    string Ciudad, 
                    string Calle, 
                    short Sexo, 
                    string Nro_Documento, 
                    string Email, 
                    string Codigo_Postal, 
                    string Fax, 
                    short Tipo_Direccion, 
                    string Telefono, 
                    string Tipo_Presentacion, 
                    string Medio_Respuesta, 
                    string Clasificadores) {
            FormulariosMupa.wsCorrespondencia.CrearPresentacionWebAnterior inValue = new FormulariosMupa.wsCorrespondencia.CrearPresentacionWebAnterior();
            inValue.Asunto = Asunto;
            inValue.Numero_Origen = Numero_Origen;
            inValue.Resumen = Resumen;
            inValue.Nombres = Nombres;
            inValue.Apellidos = Apellidos;
            inValue.Pais = Pais;
            inValue.Provincia = Provincia;
            inValue.Ciudad = Ciudad;
            inValue.Calle = Calle;
            inValue.Sexo = Sexo;
            inValue.Nro_Documento = Nro_Documento;
            inValue.Email = Email;
            inValue.Codigo_Postal = Codigo_Postal;
            inValue.Fax = Fax;
            inValue.Tipo_Direccion = Tipo_Direccion;
            inValue.Telefono = Telefono;
            inValue.Tipo_Presentacion = Tipo_Presentacion;
            inValue.Medio_Respuesta = Medio_Respuesta;
            inValue.Clasificadores = Clasificadores;
            FormulariosMupa.wsCorrespondencia.CrearPresentacionWebAnterior1 retVal = ((FormulariosMupa.wsCorrespondencia.wsCorrespondenciaSoap)(this)).CrearPresentacionWeb1(inValue);
            return retVal.CrearPresentacionWebAnteriorResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FormulariosMupa.wsCorrespondencia.CrearPresentacionWebAnterior1> FormulariosMupa.wsCorrespondencia.wsCorrespondenciaSoap.CrearPresentacionWeb1Async(FormulariosMupa.wsCorrespondencia.CrearPresentacionWebAnterior request) {
            return base.Channel.CrearPresentacionWeb1Async(request);
        }
        
        public System.Threading.Tasks.Task<FormulariosMupa.wsCorrespondencia.CrearPresentacionWebAnterior1> CrearPresentacionWeb1Async(
                    string Asunto, 
                    string Numero_Origen, 
                    string Resumen, 
                    string Nombres, 
                    string Apellidos, 
                    string Pais, 
                    string Provincia, 
                    string Ciudad, 
                    string Calle, 
                    short Sexo, 
                    string Nro_Documento, 
                    string Email, 
                    string Codigo_Postal, 
                    string Fax, 
                    short Tipo_Direccion, 
                    string Telefono, 
                    string Tipo_Presentacion, 
                    string Medio_Respuesta, 
                    string Clasificadores) {
            FormulariosMupa.wsCorrespondencia.CrearPresentacionWebAnterior inValue = new FormulariosMupa.wsCorrespondencia.CrearPresentacionWebAnterior();
            inValue.Asunto = Asunto;
            inValue.Numero_Origen = Numero_Origen;
            inValue.Resumen = Resumen;
            inValue.Nombres = Nombres;
            inValue.Apellidos = Apellidos;
            inValue.Pais = Pais;
            inValue.Provincia = Provincia;
            inValue.Ciudad = Ciudad;
            inValue.Calle = Calle;
            inValue.Sexo = Sexo;
            inValue.Nro_Documento = Nro_Documento;
            inValue.Email = Email;
            inValue.Codigo_Postal = Codigo_Postal;
            inValue.Fax = Fax;
            inValue.Tipo_Direccion = Tipo_Direccion;
            inValue.Telefono = Telefono;
            inValue.Tipo_Presentacion = Tipo_Presentacion;
            inValue.Medio_Respuesta = Medio_Respuesta;
            inValue.Clasificadores = Clasificadores;
            return ((FormulariosMupa.wsCorrespondencia.wsCorrespondenciaSoap)(this)).CrearPresentacionWeb1Async(inValue);
        }
        
        public int CrearPresentacionWebDespacho(string Despacho, string Asunto, string Numero_Origen, string Resumen, int Tipo_Presentacion, string Medio_Respuesta, int Medio_Envio) {
            return base.Channel.CrearPresentacionWebDespacho(Despacho, Asunto, Numero_Origen, Resumen, Tipo_Presentacion, Medio_Respuesta, Medio_Envio);
        }
        
        public System.Threading.Tasks.Task<int> CrearPresentacionWebDespachoAsync(string Despacho, string Asunto, string Numero_Origen, string Resumen, int Tipo_Presentacion, string Medio_Respuesta, int Medio_Envio) {
            return base.Channel.CrearPresentacionWebDespachoAsync(Despacho, Asunto, Numero_Origen, Resumen, Tipo_Presentacion, Medio_Respuesta, Medio_Envio);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FormulariosMupa.wsCorrespondencia.SubirDocumentoPresentacionWebResponse FormulariosMupa.wsCorrespondencia.wsCorrespondenciaSoap.SubirDocumentoPresentacionWeb(FormulariosMupa.wsCorrespondencia.SubirDocumentoPresentacionWebRequest request) {
            return base.Channel.SubirDocumentoPresentacionWeb(request);
        }
        
        public bool SubirDocumentoPresentacionWeb(int Codigo, string NombreDocumento, byte[] Archivo) {
            FormulariosMupa.wsCorrespondencia.SubirDocumentoPresentacionWebRequest inValue = new FormulariosMupa.wsCorrespondencia.SubirDocumentoPresentacionWebRequest();
            inValue.Codigo = Codigo;
            inValue.NombreDocumento = NombreDocumento;
            inValue.Archivo = Archivo;
            FormulariosMupa.wsCorrespondencia.SubirDocumentoPresentacionWebResponse retVal = ((FormulariosMupa.wsCorrespondencia.wsCorrespondenciaSoap)(this)).SubirDocumentoPresentacionWeb(inValue);
            return retVal.SubirDocumentoPresentacionWebResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FormulariosMupa.wsCorrespondencia.SubirDocumentoPresentacionWebResponse> FormulariosMupa.wsCorrespondencia.wsCorrespondenciaSoap.SubirDocumentoPresentacionWebAsync(FormulariosMupa.wsCorrespondencia.SubirDocumentoPresentacionWebRequest request) {
            return base.Channel.SubirDocumentoPresentacionWebAsync(request);
        }
        
        public System.Threading.Tasks.Task<FormulariosMupa.wsCorrespondencia.SubirDocumentoPresentacionWebResponse> SubirDocumentoPresentacionWebAsync(int Codigo, string NombreDocumento, byte[] Archivo) {
            FormulariosMupa.wsCorrespondencia.SubirDocumentoPresentacionWebRequest inValue = new FormulariosMupa.wsCorrespondencia.SubirDocumentoPresentacionWebRequest();
            inValue.Codigo = Codigo;
            inValue.NombreDocumento = NombreDocumento;
            inValue.Archivo = Archivo;
            return ((FormulariosMupa.wsCorrespondencia.wsCorrespondenciaSoap)(this)).SubirDocumentoPresentacionWebAsync(inValue);
        }
        
        public System.Data.DataSet ObtenerArbolDeClasificadores(string Clave, int Nivel) {
            return base.Channel.ObtenerArbolDeClasificadores(Clave, Nivel);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerArbolDeClasificadoresAsync(string Clave, int Nivel) {
            return base.Channel.ObtenerArbolDeClasificadoresAsync(Clave, Nivel);
        }
        
        public System.Data.DataSet ObtenerTipoCorrespondencia() {
            return base.Channel.ObtenerTipoCorrespondencia();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerTipoCorrespondenciaAsync() {
            return base.Channel.ObtenerTipoCorrespondenciaAsync();
        }
        
        public bool EnviarEmailTransferencia(string Codigos, int NuevasCopia) {
            return base.Channel.EnviarEmailTransferencia(Codigos, NuevasCopia);
        }
        
        public System.Threading.Tasks.Task<bool> EnviarEmailTransferenciaAsync(string Codigos, int NuevasCopia) {
            return base.Channel.EnviarEmailTransferenciaAsync(Codigos, NuevasCopia);
        }
        
        public bool EnviaCorrespondenciaAInstitucionesVinculadas(int codigoCorrespondencia, string codigosDestinos, bool AnexarDigitalizadosPrecedente) {
            return base.Channel.EnviaCorrespondenciaAInstitucionesVinculadas(codigoCorrespondencia, codigosDestinos, AnexarDigitalizadosPrecedente);
        }
        
        public System.Threading.Tasks.Task<bool> EnviaCorrespondenciaAInstitucionesVinculadasAsync(int codigoCorrespondencia, string codigosDestinos, bool AnexarDigitalizadosPrecedente) {
            return base.Channel.EnviaCorrespondenciaAInstitucionesVinculadasAsync(codigoCorrespondencia, codigosDestinos, AnexarDigitalizadosPrecedente);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FormulariosMupa.wsCorrespondencia.CrearPreCorrespondenciaDesdeArchivoResponse FormulariosMupa.wsCorrespondencia.wsCorrespondenciaSoap.CrearPreCorrespondenciaDesdeArchivo(FormulariosMupa.wsCorrespondencia.CrearPreCorrespondenciaDesdeArchivoRequest request) {
            return base.Channel.CrearPreCorrespondenciaDesdeArchivo(request);
        }
        
        public bool CrearPreCorrespondenciaDesdeArchivo(byte[] Archivo) {
            FormulariosMupa.wsCorrespondencia.CrearPreCorrespondenciaDesdeArchivoRequest inValue = new FormulariosMupa.wsCorrespondencia.CrearPreCorrespondenciaDesdeArchivoRequest();
            inValue.Archivo = Archivo;
            FormulariosMupa.wsCorrespondencia.CrearPreCorrespondenciaDesdeArchivoResponse retVal = ((FormulariosMupa.wsCorrespondencia.wsCorrespondenciaSoap)(this)).CrearPreCorrespondenciaDesdeArchivo(inValue);
            return retVal.CrearPreCorrespondenciaDesdeArchivoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FormulariosMupa.wsCorrespondencia.CrearPreCorrespondenciaDesdeArchivoResponse> FormulariosMupa.wsCorrespondencia.wsCorrespondenciaSoap.CrearPreCorrespondenciaDesdeArchivoAsync(FormulariosMupa.wsCorrespondencia.CrearPreCorrespondenciaDesdeArchivoRequest request) {
            return base.Channel.CrearPreCorrespondenciaDesdeArchivoAsync(request);
        }
        
        public System.Threading.Tasks.Task<FormulariosMupa.wsCorrespondencia.CrearPreCorrespondenciaDesdeArchivoResponse> CrearPreCorrespondenciaDesdeArchivoAsync(byte[] Archivo) {
            FormulariosMupa.wsCorrespondencia.CrearPreCorrespondenciaDesdeArchivoRequest inValue = new FormulariosMupa.wsCorrespondencia.CrearPreCorrespondenciaDesdeArchivoRequest();
            inValue.Archivo = Archivo;
            return ((FormulariosMupa.wsCorrespondencia.wsCorrespondenciaSoap)(this)).CrearPreCorrespondenciaDesdeArchivoAsync(inValue);
        }
        
        public bool NotificarRegistroCorrespondenciaVinculada(int codigoCorrespondencia) {
            return base.Channel.NotificarRegistroCorrespondenciaVinculada(codigoCorrespondencia);
        }
        
        public System.Threading.Tasks.Task<bool> NotificarRegistroCorrespondenciaVinculadaAsync(int codigoCorrespondencia) {
            return base.Channel.NotificarRegistroCorrespondenciaVinculadaAsync(codigoCorrespondencia);
        }
        
        public bool RecibeNotificacionRegistroCorrespondenciaVinculada(string codigoRegistroOrigen, string codigoRegistroRespuesta, string passwordRegistroRespuesta, string institucion, System.DateTime fechaRegistro) {
            return base.Channel.RecibeNotificacionRegistroCorrespondenciaVinculada(codigoRegistroOrigen, codigoRegistroRespuesta, passwordRegistroRespuesta, institucion, fechaRegistro);
        }
        
        public System.Threading.Tasks.Task<bool> RecibeNotificacionRegistroCorrespondenciaVinculadaAsync(string codigoRegistroOrigen, string codigoRegistroRespuesta, string passwordRegistroRespuesta, string institucion, System.DateTime fechaRegistro) {
            return base.Channel.RecibeNotificacionRegistroCorrespondenciaVinculadaAsync(codigoRegistroOrigen, codigoRegistroRespuesta, passwordRegistroRespuesta, institucion, fechaRegistro);
        }
        
        public System.Data.DataSet ObtenerDatosRegistroCorrespondenciaVinculada(string codigoRegistroOrigen, string institucion) {
            return base.Channel.ObtenerDatosRegistroCorrespondenciaVinculada(codigoRegistroOrigen, institucion);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerDatosRegistroCorrespondenciaVinculadaAsync(string codigoRegistroOrigen, string institucion) {
            return base.Channel.ObtenerDatosRegistroCorrespondenciaVinculadaAsync(codigoRegistroOrigen, institucion);
        }
        
        public bool ActualizaDatosRegistroCorrespondenciaVinculada(string codigoRegistro, string institucion, string urlWebService) {
            return base.Channel.ActualizaDatosRegistroCorrespondenciaVinculada(codigoRegistro, institucion, urlWebService);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizaDatosRegistroCorrespondenciaVinculadaAsync(string codigoRegistro, string institucion, string urlWebService) {
            return base.Channel.ActualizaDatosRegistroCorrespondenciaVinculadaAsync(codigoRegistro, institucion, urlWebService);
        }
        
        public string ParametrosQRInterna() {
            return base.Channel.ParametrosQRInterna();
        }
        
        public System.Threading.Tasks.Task<string> ParametrosQRInternaAsync() {
            return base.Channel.ParametrosQRInternaAsync();
        }
    }
}
